@page "/create"
@using GEfrontEnd.Model
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode InteractiveServer


<h3>Add New Product</h3>

<EditForm Model="@product" OnValidSubmit="AddProductPost" >
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="ID">ID</label>
        <InputNumber id="ID" @bind-Value="product.Id" class="form-control" />
        <ValidationMessage For="() => product.Id" />
    </div>

    <div class="form-group">
        <label for="Name">Name</label>
        <InputText id="Name" @bind-Value="product.Name" class="form-control" />
        <ValidationMessage For="() => product.Name" />
    </div>

    <div class="form-group">
        <label for="Version">Version</label>
        <InputText id="Version" @bind-Value="product.Version" class="form-control" />
    </div>

    <div class="form-group">
        <label for="Description">Description</label>
        <InputText id="Description" @bind-Value="product.Description" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>


@code {
    private Product product = new Product();


    private async Task AddProductPost()
    {
        var response = await Http.PostAsJsonAsync("product", product);

        Console.WriteLine(product.Name);


        if (response.IsSuccessStatusCode)
        {
            // Navigate to a different page or show a success message
            NavigationManager.NavigateTo("/products");
            Console.WriteLine(product.Name);

        }
        else
        {
            var errorDetails = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Error adding product: {errorDetails}");
            Console.WriteLine(product.Name);

        }
    }
}
